Password and Key Management Overview

Luci Digital employs a robust password and key management system to ensure the security of all accounts, devices, and sensitive data. By utilizing modern key management techniques and integrating services such as Vault and Traefik, Luci Digital provides secure storage and access control for passwords, API keys, SSH keys, encryption keys, and certificates.

Key Components:

    Vault by HashiCorp: A secure and centralized place to manage secrets and protect sensitive data.
    Traefik: Manages SSL/TLS certificates for secure communications across the platform.
    SSH Key Management: Secures server and container access via SSH key pairs, removing reliance on password-based authentication.
    Master Password Management for End-Users: Centralizes user passwords and authentication credentials in a hierarchical system for families and businesses.
    Backup and Recovery of Secrets: Ensures that all passwords and keys are backed up and recoverable in case of disaster or key loss.

Step 1: Setting Up Vault for Secrets Management

    Installing Vault by HashiCorp: Vault is used to securely store and access sensitive information such as passwords, API keys, and encryption keys. It is deployed as a service on Nebula.

        Installation: Install Vault on Nebula (or use a Docker container):

        bash

sudo apt-get update
sudo apt-get install vault

Initializing Vault: Initialize Vault and unseal it using the necessary key shares:

bash

vault operator init
vault operator unseal

Storing Secrets: Secrets (e.g., database credentials, API keys) are stored securely in Vault’s key-value store:

bash

vault kv put secret/my-secret api_key="your-api-key" password="supersecretpassword"

Accessing Secrets: Authorized applications and users can access secrets securely:

bash

    vault kv get secret/my-secret

Vault Policies and Authentication: Configure Vault to enforce strict access policies, ensuring that only authorized users and services have access to specific secrets.

    Token-Based Authentication: Vault uses token-based authentication to control access to secrets. Define policies for users and services:

    hcl

    path "secret/*" {
      capabilities = ["read"]
    }

    AppRole Authentication: For applications, Vault’s AppRole authentication can be used to issue tokens securely.

Vault Backup: Vault is configured to back up its encrypted storage automatically. This ensures that secrets can be recovered in case of data loss.

    Automated Backup with Proxmox: Set up regular Vault backups through Proxmox Backup Server:

    bash

        proxmox-backup-client backup vault.pxar:/path/to/vault

Step 2: Traefik and SSL/TLS Key Management

    SSL/TLS Certificates with Traefik: Traefik handles SSL/TLS certificates, automating the issuance and renewal of certificates through Let’s Encrypt. This ensures that all communications between the platform’s components are encrypted.

        Enable SSL in Traefik: Traefik automatically generates and renews SSL certificates for each service. Update traefik.toml to enable Let’s Encrypt:

        toml

    [certificatesResolvers.le.acme]
      email = "admin@lucidigital.net"
      storage = "acme.json"
      [certificatesResolvers.le.acme.httpChallenge]
        entryPoint = "http"

    SSL Certificate Renewal: Traefik automatically renews SSL certificates before expiration, ensuring continuous encryption for all services.

    Monitoring SSL/TLS Certificates: Use Prometheus and Grafana to monitor the expiration status of certificates and alert administrators if a renewal issue occurs.

Certificate Storage in Vault: SSL/TLS certificates can be securely stored and retrieved from Vault for added security, ensuring that sensitive certificates are kept encrypted.

    Storing Certificates in Vault: Store SSL/TLS certificates securely in Vault:

    bash

        vault kv put secret/certificates/example-com cert="-----BEGIN CERTIFICATE-----..." key="-----BEGIN PRIVATE KEY-----..."

Step 3: SSH Key Management

    Generating SSH Key Pairs: All access to Luci Digital’s infrastructure is managed via SSH key pairs. Each user is required to generate a public/private key pair and register the public key with the respective servers or services.

        Generating an SSH Key Pair: On the client machine, generate a new SSH key pair:

        bash

ssh-keygen -t rsa -b 4096 -C "your_email@example.com"

Registering Public Keys: Add the public key to the authorized_keys file on each server:

bash

    ssh-copy-id user@server-ip

Centralized SSH Key Storage: SSH keys are stored and managed centrally via Vault, ensuring that they are encrypted and only accessible by authorized personnel.

    Storing SSH Keys in Vault: Vault stores SSH private keys securely, allowing administrators to retrieve them when necessary:

    bash

        vault kv put secret/ssh-keys/server-name private_key="-----BEGIN PRIVATE KEY-----..."

    Automated Key Rotation: Regular key rotation is enforced to prevent the compromise of long-lived keys. Vault’s key rotation policies ensure that keys are replaced periodically without manual intervention.

Step 4: End-User Password Management

    Master Password Hierarchy: For clients, Luci Digital offers a master password management system. This system allows businesses and families to securely manage all of their passwords, keys, and credentials across multiple devices and locations.

        Master Password Setup: End-users are prompted to create a master password, which is used to unlock all other passwords in the system. Access to specific passwords can be granted based on a hierarchy (e.g., primary account holder, secondary users).

        Password Storage: Passwords for smart home devices, IoT systems, computers, and personal accounts are securely stored and encrypted within the Synology NAS using Vault.

    User Access Control: Clients can create multiple users within their account and assign access control for specific devices or passwords. For example, certain users may be granted access to home automation controls, while others may only have access to Wi-Fi credentials.
        Access Policies: Policies ensure that users only have access to the credentials they need. The policies can be updated dynamically via the Luci Digital management console.

Step 5: Backup and Recovery of Secrets

    Encrypted Backup of Secrets: All secrets, including passwords and encryption keys, are backed up regularly and securely. These backups are encrypted using AES-256 and stored offsite for disaster recovery purposes.

    Vault Recovery Procedures: In case of data loss, Vault can be restored from the latest encrypted backup. The backup process includes all stored secrets, ensuring that no sensitive information is lost during recovery.
        Restoring Vault from Backup: Use the Proxmox Backup Server or an encrypted cloud storage solution to restore Vault data:

        bash

        vault operator unseal
        proxmox-backup-client restore vault.pxar /path/to/restore

    Multi-Factor Authentication for Key Recovery: For enhanced security, multi-factor authentication (MFA) is required when recovering secrets from backup. This ensures that only authorized personnel can access and recover sensitive data.

Step 6: Security Audits and Compliance

    Regular Security Audits: Periodic audits of the password and key management systems are conducted to ensure compliance with security protocols and industry standards such as ISO 27001 and SOC 2. These audits verify that all secrets are stored securely and that access is properly controlled.

    Key Expiry and Revocation: All keys and certificates are assigned an expiry date, ensuring that they are regularly rotated. If a key or password is compromised, it can be immediately revoked and replaced using Vault’s automated processes.
